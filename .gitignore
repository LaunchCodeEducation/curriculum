# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# This initiates a search for files and directories starting from the current directory and
# recursively searches all subdirectories. 
# `find . -exec bash -c 'mv $0 ${0,,}' {} \;`
#
# -exec bash -c 'mv $0 ${0,,}' {} \; This is the action that will be performed on each file or directory found by the find command.
# -exec: Specifies that the following command should be executed on each found item.
#
# bash -c 'mv $0 ${0,,}' This is the command that will be executed for each item. 
#                        It launches a new Bash shell and executes the mv command with specific arguments.

# $0        - Represents the filename or directory name of the current item being processed by the find command.
# ${0,,}    -  This is a parameter expansion that converts the filename or directory name to lowercase using the `,,' operator.
# {}        - This is a placeholder that gets replaced with the path of the current item found by find.
# \;        - Indicates the end of the -exec command.

# To summarize, this code recursively searches for files and directories starting from the current directory, and for each item found, it moves the item 
# to a new location while converting its name to lowercase.

# find . -exec bash -c 'mv $0 ${0,,}' {} \;

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Launch Code custom configuration 
lc-config/

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variable files
.env
.env.development.local
.env.test.local
.env.production.local
.env.local

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next
out

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Next.js
# https://nextjs.org/blog/next-9-1#public-directory-support
# public

# vuepress build output
.vuepress/dist

# vuepress v2.x temp and cache directory
.temp
.cache

# Docusaurus cache and generated files
.docusaurus

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# yarn v2
.yarn/cache
.yarn/unplugged
.yarn/build-state.yml
.yarn/install-state.gz
.pnp.*
